{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://a20core.com/schemas/communication-sheet/v1.0",
  "title": "Communication Sheet Schema",
  "description": "Meta-schema for micro-app communication sheets",
  "type": "object",
  "required": ["app_metadata", "entities", "api_endpoints"],
  "properties": {
    "app_metadata": {
      "type": "object",
      "required": ["app_id", "app_name", "version", "communication_sheet_version"],
      "properties": {
        "app_id": {
          "type": "string",
          "pattern": "^[a-z0-9-]+$",
          "description": "Unique identifier for the application"
        },
        "app_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Human-readable application name"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Semantic version of the application"
        },
        "communication_sheet_version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$",
          "description": "Version of this communication sheet format"
        },
        "description": {
          "type": "string",
          "description": "Brief description of the application's purpose"
        },
        "maintainer": {
          "type": "string",
          "format": "email",
          "description": "Email of the team/person maintaining this app"
        }
      }
    },
    "entities": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/entity"
      }
    },
    "dependencies": {
      "type": "object",
      "properties": {
        "required_apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_dependency"
          }
        },
        "optional_apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_dependency"
          }
        }
      }
    },
    "data_sync": {
      "$ref": "#/definitions/data_sync_config"
    },
    "api_endpoints": {
      "$ref": "#/definitions/api_endpoints"
    },
    "rate_limits": {
      "$ref": "#/definitions/rate_limits"
    },
    "versioning": {
      "$ref": "#/definitions/versioning"
    }
  },
  "definitions": {
    "entity": {
      "type": "object",
      "required": ["entity_name", "version", "schema", "operations"],
      "properties": {
        "entity_name": {
          "type": "string",
          "pattern": "^[A-Z][a-zA-Z0-9]*$",
          "description": "PascalCase entity name"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$"
        },
        "schema": {
          "type": "object",
          "description": "JSON Schema definition of the entity",
          "required": ["type", "properties"],
          "properties": {
            "type": {
              "const": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/property_definition"
              }
            }
          }
        },
        "field_behaviors": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/field_behavior"
          }
        },
        "operations": {
          "$ref": "#/definitions/entity_operations"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/event"
          }
        }
      }
    },
    "property_definition": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["string", "number", "integer", "boolean", "array", "object"]
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": ["date", "date-time", "email", "uri", "uuid"]
        },
        "enum": {
          "type": "array"
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "minLength": {
          "type": "integer"
        },
        "maxLength": {
          "type": "integer"
        },
        "pattern": {
          "type": "string"
        },
        "items": {
          "type": "object"
        },
        "read_only": {
          "type": "boolean"
        },
        "impacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "field_behavior": {
      "type": "object",
      "properties": {
        "read_only": {
          "type": "boolean"
        },
        "calculated_by": {
          "type": "string"
        },
        "calculation_description": {
          "type": "string"
        },
        "refresh_trigger": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "impacts": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["entity", "description"],
            "properties": {
              "entity": {
                "type": "string"
              },
              "app": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        },
        "allowed_transitions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "entity_operations": {
      "type": "object",
      "properties": {
        "create": {
          "$ref": "#/definitions/operation"
        },
        "update": {
          "$ref": "#/definitions/operation"
        },
        "delete": {
          "$ref": "#/definitions/operation"
        },
        "query": {
          "$ref": "#/definitions/query_operation"
        }
      }
    },
    "operation": {
      "type": "object",
      "required": ["endpoint", "method", "permissions_required"],
      "properties": {
        "endpoint": {
          "type": "string",
          "pattern": "^/api/v\\d+/"
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"]
        },
        "permissions_required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggers_events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "soft_delete": {
          "type": "boolean"
        }
      }
    },
    "query_operation": {
      "allOf": [
        {
          "$ref": "#/definitions/operation"
        },
        {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["field", "operators"],
                "properties": {
                  "field": {
                    "type": "string"
                  },
                  "operators": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["eq", "neq", "gt", "gte", "lt", "lte", "in", "nin", "like", "between"]
                    }
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "properties": {
                "default_limit": {
                  "type": "integer",
                  "minimum": 1
                },
                "max_limit": {
                  "type": "integer",
                  "minimum": 1
                }
              }
            },
            "sorting": {
              "type": "object",
              "properties": {
                "allowed_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "event": {
      "type": "object",
      "required": ["event_name", "description", "payload_schema"],
      "properties": {
        "event_name": {
          "type": "string",
          "pattern": "^[a-z_]+\\.[a-z_]+$",
          "description": "Event name in format: entity.action"
        },
        "description": {
          "type": "string"
        },
        "payload_schema": {
          "type": "object",
          "description": "JSON Schema of event payload"
        },
        "interested_apps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delivery_guarantee": {
          "type": "string",
          "enum": ["at_least_once", "at_most_once", "exactly_once"]
        }
      }
    },
    "app_dependency": {
      "type": "object",
      "required": ["app_name", "min_version", "reason"],
      "properties": {
        "app_name": {
          "type": "string"
        },
        "min_version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "max_version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "data_sync_config": {
      "type": "object",
      "properties": {
        "sync_strategy": {
          "type": "string",
          "enum": ["event_driven", "polling", "push", "pull"]
        },
        "sync_frequency": {
          "type": "string",
          "enum": ["real_time", "hourly", "daily", "on_demand"]
        },
        "conflict_resolution": {
          "type": "string",
          "enum": ["source_wins", "target_wins", "latest_wins", "manual"]
        },
        "entities_synced_to_hub": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["entity", "sync_mode", "sync_triggers"],
            "properties": {
              "entity": {
                "type": "string"
              },
              "sync_mode": {
                "type": "string",
                "enum": ["full", "summary", "incremental"]
              },
              "fields_synced": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "sync_triggers": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["create", "update", "delete", "status_change"]
                }
              }
            }
          }
        },
        "entities_consumed_from_hub": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["entity", "source_app", "usage"],
            "properties": {
              "entity": {
                "type": "string"
              },
              "source_app": {
                "type": "string"
              },
              "consumed_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "usage": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "api_endpoints": {
      "type": "object",
      "required": ["base_url", "health_check"],
      "properties": {
        "base_url": {
          "type": "string",
          "format": "uri"
        },
        "health_check": {
          "type": "string",
          "pattern": "^/"
        },
        "communication_sheet": {
          "type": "string",
          "pattern": "^/"
        }
      }
    },
    "rate_limits": {
      "type": "object",
      "properties": {
        "requests_per_minute": {
          "type": "integer",
          "minimum": 1
        },
        "requests_per_hour": {
          "type": "integer",
          "minimum": 1
        },
        "burst_limit": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "versioning": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string",
          "enum": ["additive_only", "breaking_allowed"]
        },
        "breaking_changes_policy": {
          "type": "string"
        },
        "deprecation_notice_period": {
          "type": "string",
          "description": "Period in days, e.g., '90 days'"
        }
      }
    }
  }
}
